
@article{ameer_techniques_2019,
  title = {Techniques, {{Tools}} and {{Applications}} of {{Graph Analytic}}},
  volume = {10},
  issn = {21565570, 2158107X},
  abstract = {Graphs have acute significance because of polytropic nature and have wide spread real world big data applications, e.g., search engines, social media, knowledge discovery, network systems, etc. Major challenge is to develop efficient systems to store, process and analyze large graphs generated by these applications. Graph analytic is important research area in big data graphs dealing with efficient extraction of useful knowledge and interesting patterns from rapidly growing big data streams. Tremendously huge and complex data of graph applications requires specially designed graph databases having special data structures and effective features for data modeling and querying. The manipulation of large size of data requires effective scalable and distributed computational techniques for efficient graph partitioning and communication. Researchers have proposed different analytical techniques, storage structures, and processing models. This study provides insight of different graph analytical techniques and compares existing graph storage and computational technologies. This work also assesses the performance, strengths and limitations of various graph databases and processing models.},
  language = {en},
  number = {4},
  journal = {International Journal of Advanced Computer Science and Applications},
  doi = {10.14569/IJACSA.2019.0100443},
  author = {Ameer, Faiza and Kashif, Muhammad and Talib, Ramzan and Umer, Muhammad and Khan, Zahid and Zulfiqar, Khawar and Riasat, Ahmad},
  year = {2019},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\WFUCCA2D\\Ameer et al. - 2019 - Techniques, Tools and Applications of Graph Analyt.pdf}
}

@inproceedings{nisar_techniques_2013,
  address = {{Santa Clara, CA, USA}},
  title = {Techniques for {{Graph Analytics}} on {{Big Data}}},
  isbn = {978-0-7695-5006-0},
  abstract = {Graphs enjoy profound importance because of their versatility and expressivity. They can be effectively used to represent social networks, web search engines and genome sequencing. The field of graph pattern matching has been of significant importance and has wide-spread applications. Conceptually, we want to find subgraphs that match a pattern in a given graph. Much work has been done in this field with solutions like Subgraph Isomorphism and Regular Expression matching. With Big Data, scientists are frequently running into massive graphs that have amplified the challenge that this area poses. We study the speedup and communication behavior of three distributed algorithms for inexact graph pattern matching. We also study the impact of different graph partitionings on runtime and network I/O. Our extensive results show that the algorithms exhibit excellent scalable behavior and min-cut partitioning can lead to improved performance under some circumstances, and can drastically reduce the network traffic as well.},
  language = {en},
  booktitle = {2013 {{IEEE International Congress}} on {{Big Data}}},
  publisher = {{IEEE}},
  doi = {10.1109/BigData.Congress.2013.78},
  author = {Nisar, M. Usman and Fard, Arash and Miller, John A.},
  month = jun,
  year = {2013},
  pages = {255-262},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\CXFZIWRT\\Nisar et al. - 2013 - Techniques for Graph Analytics on Big Data.pdf}
}

@misc{noauthor_what_nodate,
  title = {What {{Is Big Data}}? | {{Oracle Ireland}}},
  howpublished = {https://www.oracle.com/ie/big-data/guide/what-is-big-data.html},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\E7D9THBB\\what-is-big-data.html}
}

@misc{noauthor_resources_nodate,
  title = {Resources - {{Whitepapers}}, {{Infographics}} \& {{Webinars}} | {{Domo}}},
  abstract = {Domo is a new form of business intelligence (BI) unlike anything before - an executive management platform delivered as a service that helps managers and executives transform the way they run their businesses.},
  howpublished = {https://www.domo.com/learn},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\F5DPA7F7\\learn.html}
}

@misc{noauthor_domo_nodate,
  title = {Domo {{Resource}} - {{Data Never Sleeps}}},
  abstract = {In every minute of every day, loads of data are being generated. Just how much, you ask?
A lot happens in a minute:

YouTube users upload 48 hours of new video
Instagram users share 3,600 new photos
Brands and organizations on Facebook receive 34,722 ``likes''
Over 100,000 tweets are sent},
  howpublished = {https://www.domo.com/learn/infographic-data-never-sleeps},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\I8DPMUVV\\infographic-data-never-sleeps.html}
}

@misc{noauthor_domo_nodate-1,
  title = {Domo {{Resource}} - {{Data Never Sleeps}} 7.0},
  abstract = {In 2019, our lives are filled and surrounded with data of all kinds. And this data never sleeps.
Data is generated in ad clicks, likes on social media, shares, rides, transactions, streaming content, and so much more. And when you put data in the hands of everyone, it can transform the way you think about business. Domo wants to empower every person in your organization by creating a new relationship between your people, data and systems.
In our seventh edition of Data Never Sleeps, you'll find out exactly how much data is generated in every minute of every day with some of the most popular platforms and companies in 2019.},
  howpublished = {https://www.domo.com/learn/data-never-sleeps-7},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\UDUZFQ35\\data-never-sleeps-7.html}
}

@misc{noauthor_short_nodate,
  title = {A {{Short History Of Big Data}}},
  abstract = {The history of big data: data has been around us for a long time and only recently we know how to deal with it.},
  language = {en-US},
  journal = {Datafloq},
  howpublished = {https://datafloq.com/read/big-data-history/239},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\SXH4TRYG\\239.html}
}

@misc{petrov_big_nodate,
  title = {Big {{Data Statistics}} 2019},
  abstract = {Did you know humans generates 2.5 quintillion bytes of data each day? There's plenty of facts about big data and we'll share them in this article.},
  language = {en-US},
  journal = {Tech Jury},
  author = {Petrov, Christo},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\YGN8GMHS\\big-data-statistics.html}
}

@misc{noauthor_social_2017,
  title = {Social {{Media Statistics}}, {{Social Media Usage Rises To}} 2+ {{Hours Per Day}} - {{GlobalWebIndex}}},
  abstract = {Internet users worldwide are now spending an average of 2+ hours per day on social media platforms. View user \& marketing statistics plus info on how it has changed over time.},
  language = {en-GB},
  journal = {GlobalWebIndex Blog},
  howpublished = {https://blog.globalwebindex.com/chart-of-the-day/daily-time-spent-on-social-networks/},
  month = may,
  year = {2017},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\KXH667HS\\daily-time-spent-on-social-networks.html}
}

@misc{team_how_2018,
  title = {How {{Netflix Uses Big Data}} to {{Drive Success}}},
  abstract = {Netflix has over 100 million subscribers and with that comes a wealth of data they can analyze to improve the user experience. Big data has helped Netflix massively in their mission to become the king of stream. Our friends over at FrameYourTV developed the compelling infographic below that highlights Netflix's use of big data, specifically interesting statistics, how Netflix gathers big data, and how Netflix uses big data.},
  language = {en-US},
  journal = {insideBIGDATA},
  author = {Team, Editorial},
  month = jan,
  year = {2018},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\BY3FB3H4\\netflix-uses-big-data-drive-success.html}
}

@misc{noauthor_wikibons_2018,
  title = {Wikibon's 2018 {{Big Data Analytics Trends}} and {{Forecast}}},
  abstract = {Big data analytics (BDA) is the heart of digital business, the basis for turning data into business value that drives differentiating operations and customer experiences.},
  language = {en-US},
  journal = {Wikibon Research},
  month = feb,
  year = {2018},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\R6K2YLYK\\wikibons-2018-big-data-analytics-trends-forecast.html}
}

@misc{noauthor_big_nodate,
  title = {Big {{Data Analytics}} - 1st {{Edition}}},
  howpublished = {https://www.elsevier.com/books/big-data-analytics/loshin/978-0-12-417319-4?countrycode=BE\&campaign\_source=google\_ads\&campaign\_medium=paid\_search\&campaign\_name=Ireland\_shopping\&gclid=CjwKCAiA8qLvBRAbEiwAE\_ZzPUU9PVkWZGx9EuZqkFZ0KKm83QrlvWpHr4ue3\_k-pkxs9B90PIJwSxoC0\_cQAvD\_BwE},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\IZYKZK2L\\978-0-12-417319-4.html}
}

@misc{agarwal_data_2019,
  title = {Data {{Scientists}}, {{The}} 5 {{Graph Algorithms}} That You Should Know},
  abstract = {Because Graph Analytics is the future},
  language = {en},
  journal = {Medium},
  howpublished = {https://towardsdatascience.com/data-scientists-the-five-graph-algorithms-that-you-should-know-30f454fa5513},
  author = {Agarwal, Rahul},
  month = sep,
  year = {2019},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\IXNUTJE9\\data-scientists-the-five-graph-algorithms-that-you-should-know-30f454fa5513.html}
}

@article{scarselli_graph_2009,
  title = {The {{Graph Neural Network Model}}},
  volume = {20},
  issn = {1045-9227, 1941-0093},
  abstract = {Many underlying relationships among data in several areas of science and engineering, e.g., computer vision, molecular chemistry, molecular biology, pattern recognition, and data mining, can be represented in terms of graphs. In this paper, we propose a new neural network model, called graph neural network (GNN) model, that extends existing neural network methods for processing the data represented in graph domains. This GNN model, which can directly process most of the practically useful types of graphs, e.g., acyclic, cyclic, directed, and undirected, implements a function tau(G,n) isin IRm that maps a graph G and one of its nodes n into an m-dimensional Euclidean space. A supervised learning algorithm is derived to estimate the parameters of the proposed GNN model. The computational cost of the proposed algorithm is also considered. Some experimental results are shown to validate the proposed learning algorithm, and to demonstrate its generalization capabilities.},
  language = {en},
  number = {1},
  journal = {IEEE Transactions on Neural Networks},
  doi = {10.1109/TNN.2008.2005605},
  author = {Scarselli, F. and Gori, M. and {Ah Chung Tsoi} and Hagenbuchner, M. and Monfardini, G.},
  month = jan,
  year = {2009},
  pages = {61-80},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\BCSYLREW\\Scarselli et al. - 2009 - The Graph Neural Network Model.pdf}
}

@misc{huang_steeve_gentle_2019,
  title = {A {{Gentle Introduction}} to {{Graph Neural Network}} ({{Basics}}, {{DeepWalk}}, and {{GraphSage}})},
  abstract = {Recently, Graph Neural Network (GNN) has gained increasing popularity in various domains, including social network, knowledge graph\ldots{}},
  language = {en},
  journal = {Medium},
  howpublished = {https://towardsdatascience.com/a-gentle-introduction-to-graph-neural-network-basics-deepwalk-and-graphsage-db5d540d50b3},
  author = {Huang (Steeve), Kung-Hsiang},
  month = may,
  year = {2019},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\HSLWRTPL\\a-gentle-introduction-to-graph-neural-network-basics-deepwalk-and-graphsage-db5d540d50b3.html}
}

@misc{noauthor_special_nodate,
  title = {Special {{Issue}} on {{Graph}}-Based {{Methods}} for {{Large Scale Financial}} and {{Business Data Analysis}} - {{Call}} for {{Papers}} - {{Elsevier}}},
  howpublished = {https://www.journals.elsevier.com/pattern-recognition/call-for-papers/graph-based-methods},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\APC4Y79D\\graph-based-methods.html}
}

@misc{noauthor_what_nodate-1,
  title = {What Is Graph Analytics?},
  abstract = {A growing number of businesses and industries are finding innovative ways to apply graph analytics to a variety of use-case scenarios because it affords a unique perspective on the analysis of...},
  language = {en},
  journal = {IBM Big Data \& Analytics Hub},
  howpublished = {https://www.ibmbigdatahub.com/blog/what-graph-analytics},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\HTSVG34R\\what-graph-analytics.html}
}

@article{buluc_parallel_nodate,
  title = {Parallel {{Breadth}}-{{First Search}} on {{Distributed Memory Systems}}},
  abstract = {Data-intensive, graph-based computations are pervasive in several scientific applications, and are known to to be quite challenging to implement on distributed memory systems. In this work, we explore the design space of parallel algorithms for Breadth-First Search (BFS), a key subroutine in several graph algorithms. We present two highly-tuned parallel approaches for BFS on large parallel systems: a levelsynchronous strategy that relies on a simple vertex-based partitioning of the graph, and a two-dimensional sparse matrix partitioning-based approach that mitigates parallel communication overhead. For both approaches, we also present hybrid versions with intra-node multithreading. Our novel hybrid two-dimensional algorithm reduces communication times by up to a factor of 3.5, relative to a common vertex based approach. Our experimental study identifies execution regimes in which these approaches will be competitive, and we demonstrate extremely high performance on leading distributed-memory parallel systems. For instance, for a 40,000-core parallel execution on Hopper, an AMD MagnyCours based system, we achieve a BFS performance rate of 17.8 billion edge visits per second on an undirected graph of 4.3 billion vertices and 68.7 billion edges with skewed degree distribution.},
  language = {en},
  author = {Bulu{\c c}, Ayd\i{}n and Madduri, Kamesh},
  pages = {12},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\8MG3I4DL\\Buluç and Madduri - Parallel Breadth-First Search on Distributed Memor.pdf}
}

@article{rao_parallel_1987,
  title = {Parallel Depth First Search. {{Part I}}. {{Implementation}}},
  volume = {16},
  issn = {1573-7640},
  abstract = {This paper presents a parallel formulation of depth-first search which retains the storage efficiency of sequential depth-first search and can be mapped on to anyMIMD architecture. To study its effectiveness it has been implemented to solve the 15-puzzle problem on three commercially available multiprocessors\textemdash{}Sequent Balance 21000, the Intel Hypercube and BBN Butterfly. We have been able to achieve fairly linear speedup on Sequent up to 30 processors (the maximum configuration available) and on the Intel Hypercube andBBN Butterfly up to 128 processors (the maximum configurations available). Many researchers considered the ring architecture to be quite suitable for parallel depth-first search. Our experimental results show that hypercube and sharedmemory architectures are significantly better.At the heart of our parallel formulation is a dynamic work distribution scheme that divides the work between different processors. The effectiveness of the parallel formulation is strongly influenced by the work distribution scheme and architectural features such as presence/absence of shared memory, the diameter of the network, relative speed of the communication network, etc. In a companion paper,(1) we analyze the effectiveness of different load-balancing schemes and architectures, and also present new improved work distribution schemes.},
  language = {en},
  number = {6},
  journal = {International Journal of Parallel Programming},
  doi = {10.1007/BF01389000},
  author = {Rao, V. Nageshwara and Kumar, Vipin},
  month = dec,
  year = {1987},
  keywords = {depth-first search,Parallel formulation,state-space trees,work distribution schemes},
  pages = {479-499}
}

@inproceedings{naumov_parallel_2017,
  address = {{Denver, CO, USA}},
  title = {Parallel {{Depth}}-{{First Search}} for {{Directed Acyclic Graphs}}},
  isbn = {978-1-4503-5136-2},
  abstract = {Depth-First Search (DFS) is a pervasive algorithm, often used as a building block for topological sort, connectivity and planarity testing, among many other applications. We propose a novel work-efficient parallel algorithm for the DFS traversal of directed acyclic graph (DAG). The algorithm traverses the entire DAG in a BFS-like fashion no more than three times. As a result it finds the DFS pre-order (discovery) and post-order (finish time) as well as the parent relationship associated with every node in a DAG. We analyse the runtime and work complexity of this novel parallel algorithm. Also, we show that unlike many of its predecessors, our algorithm is easy to implement and optimize for performance. In particular, we show that its CUDA implementation on the GPU outperforms sequential DFS on the CPU by up to 6\texttimes{} in our experiments.},
  language = {en},
  booktitle = {Proceedings of the {{Seventh Workshop}} on {{Irregular Applications}}: {{Architectures}} and {{Algorithms}} - {{IA3}}'17},
  publisher = {{ACM Press}},
  doi = {10.1145/3149704.3149764},
  author = {Naumov, Maxim and Vrielink, Alysson and Garland, Michael},
  year = {2017},
  pages = {1-8},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\FWAX82W8\\Naumov et al. - 2017 - Parallel Depth-First Search for Directed Acyclic G.pdf}
}

@article{kranjcevic_parallel_2016,
  archivePrefix = {arXiv},
  eprinttype = {arxiv},
  eprint = {1604.02113},
  primaryClass = {cs},
  title = {Parallel {{Delta}}-{{Stepping Algorithm}} for {{Shared Memory Architectures}}},
  abstract = {We present a shared memory implementation of a parallel algorithm, called delta-stepping, for solving the single source shortest path problem for directed and undirected graphs. In order to reduce synchronization costs we make some deviations from the algorithm and discuss the consequences. We study the behaviour of our implementation on small-world and scale-free graphs, and graphs arising from game maps. We collect performance data on multi-core CPUs and Intel Xeon Phi. When run in sequential mode, our implementation outperforms the implementation of Dijkstra's algorithm from Boost Graph Library on graphs with a small diameter. Both on the CPU and the co-processor we achieve an overall performance of at least 50\% parallel efficiency.},
  journal = {arXiv:1604.02113 [cs]},
  author = {Kranj{\v c}evi{\'c}, M. and Palossi, D. and Pintarelli, S.},
  month = apr,
  year = {2016},
  keywords = {Computer Science - Distributed; Parallel; and Cluster Computing},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\T3VRAZ98\\Kranjčević et al. - 2016 - Parallel Delta-Stepping Algorithm for Shared Memor.pdf;C\:\\Users\\faisa\\Zotero\\storage\\F5BW4IZS\\1604.html}
}

@inproceedings{kim_efficient_2018,
  address = {{New York, NY, USA}},
  series = {{{ICPP}} '18},
  title = {Efficient {{Parallel All}}-{{Pairs Shortest Paths Algorithm}} for {{Complex Graph Analysis}}},
  isbn = {978-1-4503-6523-9},
  abstract = {The all-pairs shortest path problem is a classic problem to study characteristics of the given graphs. Though many efficient all-pairs shortest path algorithms have been published, it is still a very expensive computing task, especially with large graph datasets. In this paper, we propose an efficient parallel all-pairs shortest path algorithm based on Peng et al.'s fast sequential algorithm on shared-memory parallel environments to achieve faster and more efficient calculation for large-scale real-world networks. Peng et al.'s algorithm needs to sort vertices with respect to their degrees. However, it turns out the original algorithm uses less efficient sorting method, which is a significant portion of parallel overhead. Therefore, we also propose an efficient parallel method to sort data within a fixed range, in order to minimize the parallel overhead in our parallel algorithm. The optimized efficient sorting method can be used for general sorting purposes. Our experimental analysis shows that our proposed parallel algorithm achieves very high parallel speedup, even hyper-linear speedup, with real-world test datasets on two different shared-memory multi-core systems.},
  booktitle = {Proceedings of the 47th {{International Conference}} on {{Parallel Processing Companion}}},
  publisher = {{ACM}},
  doi = {10.1145/3229710.3229730},
  author = {Kim, Jong Wook and Choi, Hyoeun and Bae, Seung-Hee},
  year = {2018},
  keywords = {All-pairs shortest paths,Parallel Algorithms,Shared-memory parallelism},
  pages = {5:1--5:10},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\PYJ3E5FS\\Kim et al. - 2018 - Efficient Parallel All-Pairs Shortest Paths Algori.pdf}
}

@article{fitina_application_2010,
  title = {An {{Application}} of {{Minimum Spanning Trees}} to {{Travel Planning}}},
  volume = {12},
  abstract = {Travel in Papua New Guinea is quite expensive compared to many of its neighbouring countries. On the other hand Papua New Guinea presents travelers with a tremendous array of sites and scenes that they would not find anywhere else in the world. This is the first of a series papers, resulting from collaboration between the departments of Tourism and Hospitality Management, and Mathematics and Computing Science at Divine Word University, on quantifying the issue of tourism in Papua New Guinea. In this paper we demonstrate the use of Prim's algorithm in graph theory to determine less expensive routes between nodes in a connected graph. We suggest an application to determining cheap transport routes in the country.},
  language = {en},
  author = {Fitina, Lakoa and Imbal, John and Uiari, Vanessa and Murki, Nathaline and Goodyear, Elizabeth},
  year = {2010},
  pages = {11},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\8YMCMDFN\\Fitina et al. - 2010 - An Application of Minimum Spanning Trees to Travel.pdf}
}

@article{sz_random_nodate,
  title = {Random {{Walks}} on {{Graphs}}: {{A Survey}}},
  language = {en},
  author = {Sz, L Lova},
  pages = {46},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\BSYMZPZC\\Sz - Random Walks on Graphs A Survey.pdf}
}

@article{sharir_strong-connectivity_1981,
  title = {A Strong-Connectivity Algorithm and Its Applications in Data Flow Analysis},
  volume = {7},
  issn = {0898-1221},
  abstract = {We present a new linear algorithm for constructing all strongly connected components of a directed graph, and show how to apply it in iterative solution of data-flow analysis problems, to obtain a simple algorithm which improves the Hecht-Ullman algorithm.},
  language = {en},
  number = {1},
  journal = {Computers \& Mathematics with Applications},
  doi = {10.1016/0898-1221(81)90008-0},
  author = {Sharir, M.},
  month = jan,
  year = {1981},
  pages = {67-72},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\IC5TPCSR\\Sharir - 1981 - A strong-connectivity algorithm and its applicatio.pdf;C\:\\Users\\faisa\\Zotero\\storage\\MWGBP6ZW\\0898122181900080.html}
}

@article{raghavan_near_2007,
  archivePrefix = {arXiv},
  eprinttype = {arxiv},
  eprint = {0709.2938},
  title = {Near Linear Time Algorithm to Detect Community Structures in Large-Scale Networks},
  volume = {76},
  issn = {1539-3755, 1550-2376},
  abstract = {Community detection and analysis is an important methodology for understanding the organization of various real-world networks and has applications in problems as diverse as consensus formation in social communities or the identification of functional modules in biochemical networks. Currently used algorithms that identify the community structures in large-scale real-world networks require a priori information such as the number and sizes of communities or are computationally expensive. In this paper we investigate a simple label propagation algorithm that uses the network structure alone as its guide and requires neither optimization of a pre-defined objective function nor prior information about the communities. In our algorithm every node is initialized with a unique label and at every step each node adopts the label that most of its neighbors currently have. In this iterative process densely connected groups of nodes form a consensus on a unique label to form communities. We validate the algorithm by applying it to networks whose community structures are known. We also demonstrate that the algorithm takes an almost linear time and hence it is computationally less expensive than what was possible so far.},
  number = {3},
  journal = {Physical Review E},
  doi = {10.1103/PhysRevE.76.036106},
  author = {Raghavan, Usha Nandini and Albert, Reka and Kumara, Soundar},
  month = sep,
  year = {2007},
  keywords = {Physics - Physics and Society},
  pages = {036106},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\UZFP2GMR\\Raghavan et al. - 2007 - Near linear time algorithm to detect community str.pdf;C\:\\Users\\faisa\\Zotero\\storage\\A3YCCH4H\\0709.html}
}

@article{tarjan_depth-first_1972,
  title = {Depth-{{First Search}} and {{Linear Graph Algorithms}}},
  volume = {1},
  issn = {0097-5397, 1095-7111},
  language = {en},
  number = {2},
  journal = {SIAM Journal on Computing},
  doi = {10.1137/0201010},
  author = {Tarjan, Robert},
  month = jun,
  year = {1972},
  pages = {146-160},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\NKPH7W4Z\\Tarjan - 1972 - Depth-First Search and Linear Graph Algorithms.pdf}
}

@book{monge_efficient_1997,
  title = {An {{Efficient Domain}}-{{Independent Algorithm}} for {{Detecting Approximately Duplicate Database Records}}},
  abstract = {Detecting database records that are approximate duplicates, but not exact duplicates, is an important task. Databases may contain duplicate records concerning the same realworld entity because of data entry errors, because of unstandardized abbreviations, or because of differences in the detailed schemas of records from multiple databases, among other reasons. In this paper, we present an efficient algorithm for recognizing clusters of approximately duplicate records. Three key ideas distinguish the algorithm presented. First, a version of the Smith-Waterman algorithm for computing minimum edit-distance is used as a domainindependent method to recognize pairs of approximately duplicate records. Second, the union/find algorithm is used to keep track of clusters of duplicate records incrementally, as pairwise duplicate relationships are discovered. Third, the algorithm uses a priority queue of cluster subsets to respond adaptively to the size and homogeneity of the clusters discovered as...},
  author = {Monge, Alvaro and Elkan, Charles},
  year = {1997},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\42DQLC5T\\Monge and Elkan - 1997 - An Efficient Domain-Independent Algorithm for Dete.pdf;C\:\\Users\\faisa\\Zotero\\storage\\GXS8DVUJ\\summary.html}
}

@article{an_characterizing_2004,
  title = {Characterizing and {{Mining}} the {{Citation Graph}} of the {{Computer Science Literature}}},
  volume = {6},
  issn = {0219-3116},
  abstract = {Citation graphs representing a body of scientific literature convey measures of scholarly activity and productivity. In this work we present a study of the structure of the citation graph of the computer science literature. Using a web robot we built several topic-specific citation graphs and their union graph from the digital library ResearchIndex. After verifying that the degree distributions follow a power law, we applied a series of graph theoretical algorithms to elicit an aggregate picture of the citation graph in terms of its connectivity. We discovered the existence of a single large weakly-connected and a single large biconnected component, and confirmed the expected lack of a large strongly-connected component. The large components remained even after removing the strongest authority nodes or the strongest hub nodes, indicating that such tight connectivity is widespread and does not depend on a small subset of important nodes. Finally, minimum cuts between authority papers of different areas did not result in a balanced partitioning of the graph into areas, pointing to the need for more sophisticated algorithms for clustering the graph.},
  language = {en},
  number = {6},
  journal = {Knowledge and Information Systems},
  doi = {10.1007/s10115-003-0128-3},
  author = {An, Yuan and Janssen, Jeannette and Milios, Evangelos E.},
  month = nov,
  year = {2004},
  keywords = {Citation graph,Graph connectivity,Networked information spaces,Power law,Small worlds},
  pages = {664-678},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\9QBFITIK\\An et al. - 2004 - Characterizing and Mining the Citation Graph of th.pdf}
}

@article{blondel_fast_2008,
  archivePrefix = {arXiv},
  eprinttype = {arxiv},
  eprint = {0803.0476},
  title = {Fast Unfolding of Communities in Large Networks},
  volume = {2008},
  issn = {1742-5468},
  abstract = {We propose a simple method to extract the community structure of large networks. Our method is a heuristic method that is based on modularity optimization. It is shown to outperform all other known community detection method in terms of computation time. Moreover, the quality of the communities detected is very good, as measured by the so-called modularity. This is shown first by identifying language communities in a Belgian mobile phone network of 2.6 million customers and by analyzing a web graph of 118 million nodes and more than one billion links. The accuracy of our algorithm is also verified on ad-hoc modular networks. .},
  number = {10},
  journal = {Journal of Statistical Mechanics: Theory and Experiment},
  doi = {10.1088/1742-5468/2008/10/P10008},
  author = {Blondel, Vincent D. and Guillaume, Jean-Loup and Lambiotte, Renaud and Lefebvre, Etienne},
  month = oct,
  year = {2008},
  keywords = {Physics - Physics and Society,Computer Science - Computers and Society,Computer Science - Data Structures and Algorithms,Condensed Matter - Statistical Mechanics},
  pages = {P10008},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\87XETI2Y\\Blondel et al. - 2008 - Fast unfolding of communities in large networks.pdf;C\:\\Users\\faisa\\Zotero\\storage\\5J8VACPI\\0803.html}
}

@article{lu_parallel_2014,
  archivePrefix = {arXiv},
  eprinttype = {arxiv},
  eprint = {1410.1237},
  primaryClass = {physics},
  title = {Parallel {{Heuristics}} for {{Scalable Community Detection}}},
  abstract = {Community detection has become a fundamental operation in numerous graph-theoretic applications. It is used to reveal natural divisions that exist within real world networks without imposing prior size or cardinality constraints on the set of communities. Despite its potential for application, there is only limited support for community detection on large-scale parallel computers, largely owing to the irregular and inherently sequential nature of the underlying heuristics. In this paper, we present parallelization heuristics for fast community detection using the Louvain method as the serial template. The Louvain method is an iterative heuristic for modularity optimization. Originally developed by Blondel et al. in 2008, the method has become increasingly popular owing to its ability to detect high modularity community partitions in a fast and memory-efficient manner. However, the method is also inherently sequential, thereby limiting its scalability. Here, we observe certain key properties of this method that present challenges for its parallelization, and consequently propose heuristics that are designed to break the sequential barrier. For evaluation purposes, we implemented our heuristics using OpenMP multithreading, and tested them over real world graphs derived from multiple application domains (e.g., internet, citation, biological). Compared to the serial Louvain implementation, our parallel implementation is able to produce community outputs with a higher modularity for most of the inputs tested, in comparable number or fewer iterations, while providing absolute speedups of up to 16x using 32 threads.},
  journal = {arXiv:1410.1237 [physics]},
  author = {Lu, Hao and Halappanavar, Mahantesh and Kalyanaraman, Ananth},
  month = oct,
  year = {2014},
  keywords = {Computer Science - Distributed; Parallel; and Cluster Computing,Physics - Physics and Society,Computer Science - Social and Information Networks},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\MZABK5FY\\Lu et al. - 2014 - Parallel Heuristics for Scalable Community Detecti.pdf;C\:\\Users\\faisa\\Zotero\\storage\\C5GISTK3\\1410.html}
}

@incollection{hutchison_finding_2005,
  address = {{Berlin, Heidelberg}},
  title = {Finding, {{Counting}} and {{Listing All Triangles}} in {{Large Graphs}}, an {{Experimental Study}}},
  volume = {3503},
  isbn = {978-3-540-25920-6 978-3-540-32078-4},
  abstract = {A rigorous experimental study of algorithms for counting and listing all triangles in large existing networks as well as generated graphs is presented. In the past, this fundamental graph problem has been studied intensively from a theoretical point of view. Recently, triangle counting has also become a widely used tool in network analysis. Due to the very large size of networks like the Internet, WWW or social networks, the efficiency of algorithms for triangle counting and listing is an important issue. The main intention of this work is to evaluate the practicability of triangle counting and listing in very large graphs with various degree distributions. We give a surprisingly simple enhancement of a well known algorithm that performs best, and makes triangle listing and counting in huge networks feasible.},
  language = {en},
  booktitle = {Experimental and {{Efficient Algorithms}}},
  publisher = {{Springer Berlin Heidelberg}},
  doi = {10.1007/11427186_54},
  author = {Schank, Thomas and Wagner, Dorothea},
  editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Dough and Vardi, Moshe Y. and Weikum, Gerhard and Nikoletseas, Sotiris E.},
  year = {2005},
  pages = {606-609},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\ALIPQEG5\\Schank and Wagner - 2005 - Finding, Counting and Listing All Triangles in Lar.pdf}
}

@article{johnston_cliques_1976,
  title = {Cliques of a Graph-Variations on the {{Bron}}-{{Kerbosch}} Algorithm},
  volume = {5},
  issn = {1573-7640},
  abstract = {This paper develops a family of algorithms that are variations on the Bron-Kerbosch algorithm for finding all the cliques of a simple undirected graph. The algorithms are developed in a stepwise manner, from a recursive algorithm for generating all combinations of zero or more objects chosen fromN objects. Experimental results are given.},
  language = {en},
  number = {3},
  journal = {International Journal of Computer \& Information Sciences},
  doi = {10.1007/BF00991836},
  author = {Johnston, H. C.},
  month = sep,
  year = {1976},
  keywords = {graph theory,Cliques,combinatorial programming,stepwise refinement,tree search},
  pages = {209-238}
}

@inproceedings{antoro_application_2017,
  address = {{Depok, Jawa Barat, Indonesia}},
  title = {Application of {{Bron}}-{{Kerbosch}} Algorithm in Graph Clustering Using Complement Matrix},
  abstract = {Maximal clique enumeration is a graph clustering method for finding all vertices that have the most influence in a graph. The Bron-Kerbosch algorithm is one of the fastest algorithms to find all maximal cliques. Hence, this paper will focus on that algorithm to find all maximal cliques. Counting all maximal cliques of a graph usually uses an adjacency matrix of the graph to find all vertices in the graph that have the most influence. But, in this paper, a complement matrix of a graph will be used in counting all maximal cliques. This research uses a graph that represents a domestic flight route of one of the airlines in Indonesia. By using Bron-Kerbosch algorithm, all maximal cliques of the graph will be listed, so that it will come up with the vertices which are the most influential in this graph. The graph will be represented in complement matrix. The result of applying the Bron-Kerbosch algorithm with the complement matrix of graph will determine vertices that have the most influence in the graph. Besides that, by using a complement matrix, the result gives more information on the vertices which are only connected to the vertices that have the most influence.},
  language = {en},
  booktitle = {{{INTERNATIONAL SYMPOSIUM ON CURRENT PROGRESS IN MATHEMATICS AND SCIENCES}} 2016 ({{ISCPMS}} 2016): {{Proceedings}} of the 2nd {{International Symposium}} on {{Current Progress}} in {{Mathematics}} and {{Sciences}} 2016},
  doi = {10.1063/1.4991245},
  author = {Antoro, S. C. and Sugeng, K. A. and Handari, B. D.},
  year = {2017},
  pages = {030141},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\W8V5XNKP\\Antoro et al. - 2017 - Application of Bron-Kerbosch algorithm in graph cl.pdf}
}

@article{freeman_centrality_1978,
  title = {Centrality in Social Networks Conceptual Clarification},
  volume = {1},
  issn = {03788733},
  language = {en},
  number = {3},
  journal = {Social Networks},
  doi = {10.1016/0378-8733(78)90021-7},
  author = {Freeman, Linton C.},
  month = jan,
  year = {1978},
  pages = {215-239},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\JY77AFEV\\Freeman - 1978 - Centrality in social networks conceptual clarifica.pdf}
}

@article{phillip_bonacich_reviewed_power_1987,
  title = {Power and {{Centrality}}: {{A Family}} of {{Measures}}},
  volume = {92},
  language = {en},
  number = {5},
  journal = {American Journal of Sociology},
  author = {{Phillip Bonacich Reviewed}},
  year = {1987},
  pages = {1170-1182},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\E2ZRWVRE\\work(s) - 1987 - Power and Centrality A Family of Measures.pdf}
}

@article{negre_eigenvector_2018,
  title = {Eigenvector Centrality for Characterization of Protein Allosteric Pathways},
  volume = {115},
  issn = {0027-8424},
  abstract = {Allosteric processes are ubiquitous in macromolecules and regulate biochemical information transfer between spatially distant sites. Despite decades of study, allosteric processes remain generally poorly understood at the molecular level. Here, we introduce the eigenvector centrality measure of mutual information to disentangle the complex interplay of amino acid interactions giving rise to allosteric signaling. The analysis of eigenvector centrality is tested in imidazole glycerol phosphate synthase (IGPS), a prototypical V-type allosteric enzyme. The resulting insights allow us to pinpoint key amino acids in terms of their relevance in the allosteric process, suggesting protein-engineering strategies for control of enzymatic activity., Determining the principal energy-transfer pathways responsible for allosteric communication in biomolecules remains challenging, partially due to the intrinsic complexity of the systems and the lack of effective characterization methods. In this work, we introduce the eigenvector centrality metric based on mutual information to elucidate allosteric mechanisms that regulate enzymatic activity. Moreover, we propose a strategy to characterize the range of correlations that underlie the allosteric processes. We use the V-type allosteric enzyme imidazole glycerol phosphate synthase (IGPS) to test the proposed methodology. The eigenvector centrality method identifies key amino acid residues of IGPS with high susceptibility to effector binding. The findings are validated by solution NMR measurements yielding important biological insights, including direct experimental evidence for interdomain motion, the central role played by helix h{$\alpha$}1, and the short-range nature of correlations responsible for the allosteric mechanism. Beyond insights on IGPS allosteric pathways and the nature of residues that could be targeted by therapeutic drugs or site-directed mutagenesis, the reported findings demonstrate the eigenvector centrality analysis as a general cost-effective methodology to gain fundamental understanding of allosteric mechanisms at the molecular level.},
  number = {52},
  journal = {Proceedings of the National Academy of Sciences of the United States of America},
  doi = {10.1073/pnas.1810452115},
  author = {Negre, Christian F. A. and Morzan, Uriel N. and Hendrickson, Heidi P. and Pal, Rhitankar and Lisi, George P. and Loria, J. Patrick and Rivalta, Ivan and Ho, Junming and Batista, Victor S.},
  month = dec,
  year = {2018},
  pages = {E12201-E12208},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\24YWDS4C\\Negre et al. - 2018 - Eigenvector centrality for characterization of pro.pdf},
  pmid = {30530700},
  pmcid = {PMC6310864}
}

@article{katz_new_1953,
  title = {A New Status Index Derived from Sociometric Analysis},
  volume = {18},
  issn = {1860-0980},
  abstract = {For the purpose of evaluating status in a manner free from the deficiencies of popularity contest procedures, this paper presents a new method of computation which takes into accountwho chooses as well ashow many choose. It is necessary to introduce, in this connection, the concept of attenuation in influence transmitted through intermediaries.},
  language = {en},
  number = {1},
  journal = {Psychometrika},
  doi = {10.1007/BF02289026},
  author = {Katz, Leo},
  month = mar,
  year = {1953},
  keywords = {Attenuation,Popularity Contest,Public Policy,Statistical Theory,Status Index},
  pages = {39-43}
}

@misc{page_pagerank_1999,
  type = {Techreport},
  title = {The {{PageRank Citation Ranking}}: {{Bringing Order}} to the {{Web}}.},
  shorttitle = {The {{PageRank Citation Ranking}}},
  abstract = {The importance of a Web page is an inherently subjective matter, which depends on the readers interests, knowledge and attitudes. But there is still much that can be said objectively about the relative importance of Web pages. This paper describes PageRank, a mathod for rating Web pages objectively and mechanically, effectively measuring the human interest and attention devoted to them. We compare PageRank to an idealized random Web surfer. We show how to efficiently compute PageRank for large numbers of pages. And, we show how to apply PageRank to search and to user navigation.},
  howpublished = {http://ilpubs.stanford.edu:8090/422/},
  author = {Page, Lawrence and Brin, Sergey and Motwani, Rajeev and Winograd, Terry},
  month = nov,
  year = {1999},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\G43EKT44\\Page et al. - 1999 - The PageRank Citation Ranking Bringing Order to t.pdf;C\:\\Users\\faisa\\Zotero\\storage\\BJZWLCNW\\422.html}
}

@article{sabidussi_centrality_1966,
  title = {The Centrality Index of a Graph},
  volume = {31},
  issn = {1860-0980},
  language = {en},
  number = {4},
  journal = {Psychometrika},
  doi = {10.1007/BF02289527},
  author = {Sabidussi, Gert},
  month = dec,
  year = {1966},
  keywords = {Public Policy,Statistical Theory,Centrality Index},
  pages = {581-603},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\6B3MPK3W\\Sabidussi - 1966 - The centrality index of a graph.pdf}
}

@article{borgatti_centrality_2005,
  title = {Centrality and Network Flow},
  volume = {27},
  issn = {03788733},
  abstract = {Centrality measures, or at least popular interpretations of these measures, make implicit assumptions about the manner in which traffic flows through a network. For example, some measures count only geodesic paths, apparently assuming that whatever flows through the network only moves along the shortest possible paths. This paper lays out a typology of network flows based on two dimensions of variation, namely the kinds of trajectories that traffic may follow (geodesics, paths, trails, or walks) and the method of spread (broadcast, serial replication, or transfer). Measures of centrality are then matched to the kinds of flows that they are appropriate for. Simulations are used to examine the relationship between type of flow and the differential importance of nodes with respect to key measurements such as speed of reception of traffic and frequency of receiving traffic. It is shown that the off-the-shelf formulas for centrality measures are fully applicable only for the specific flow processes they are designed for, and that when they are applied to other flow processes they get the ``wrong'' answer. It is noted that the most commonly used centrality measures are not appropriate for most of the flows we are routinely interested in. A key claim made in this paper is that centrality measures can be regarded as generating expected values for certain kinds of node outcomes (such as speed and frequency of reception) given implicit models of how traffic flows, and that this provides a new and useful way of thinking about centrality.},
  language = {en},
  number = {1},
  journal = {Social Networks},
  doi = {10.1016/j.socnet.2004.11.008},
  author = {Borgatti, Stephen P.},
  month = jan,
  year = {2005},
  pages = {55-71},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\RGJW29VX\\Borgatti - 2005 - Centrality and network flow.pdf}
}

@article{freeman_set_1977,
  title = {A {{Set}} of {{Measures}} of {{Centrality Based}} on {{Betweenness}}},
  volume = {40},
  issn = {0038-0431},
  abstract = {A Family of new measures of point and graph centrality based on early intuitions of Bavelas (1948) is introduced. These measures define centrality in terms of the degree to which a point falls on the shortest path between others and therefore has a potential for control of communication. They may be used to index centrality in any large or small network of symmetrical relations, whether connected or unconnected.},
  number = {1},
  journal = {Sociometry},
  doi = {10.2307/3033543},
  author = {Freeman, Linton C.},
  year = {1977},
  pages = {35-41}
}

@article{wu_comprehensive_2019,
  archivePrefix = {arXiv},
  eprinttype = {arxiv},
  eprint = {1901.00596},
  primaryClass = {cs, stat},
  title = {A {{Comprehensive Survey}} on {{Graph Neural Networks}}},
  abstract = {Deep learning has revolutionized many machine learning tasks in recent years, ranging from image classification and video processing to speech recognition and natural language understanding. The data in these tasks are typically represented in the Euclidean space. However, there is an increasing number of applications where data are generated from non-Euclidean domains and are represented as graphs with complex relationships and interdependency between objects. The complexity of graph data has imposed significant challenges on existing machine learning algorithms. Recently, many studies on extending deep learning approaches for graph data have emerged. In this survey, we provide a comprehensive overview of graph neural networks (GNNs) in data mining and machine learning fields. We propose a new taxonomy to divide the state-of-the-art graph neural networks into four categories, namely recurrent graph neural networks, convolutional graph neural networks, graph autoencoders, and spatial-temporal graph neural networks. We further discuss the applications of graph neural networks across various domains and summarize the open source codes, benchmark data sets, and model evaluation of graph neural networks. Finally, we propose potential research directions in this rapidly growing field.},
  journal = {arXiv:1901.00596 [cs, stat]},
  author = {Wu, Zonghan and Pan, Shirui and Chen, Fengwen and Long, Guodong and Zhang, Chengqi and Yu, Philip S.},
  month = dec,
  year = {2019},
  keywords = {Computer Science - Machine Learning,Statistics - Machine Learning},
  file = {C\:\\Users\\faisa\\Zotero\\storage\\5TLRCYW4\\Wu et al. - 2019 - A Comprehensive Survey on Graph Neural Networks.pdf;C\:\\Users\\faisa\\Zotero\\storage\\8D6SS8Z9\\1901.html}
}


